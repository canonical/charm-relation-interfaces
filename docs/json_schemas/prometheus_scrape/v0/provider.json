{
  "$defs": {
    "AlertGroupModel": {
      "properties": {
        "name": {
          "description": "The name of the alert group.",
          "title": "Name",
          "type": "string"
        },
        "rules": {
          "description": "List of alert rules within the group.",
          "items": {
            "$ref": "#/$defs/AlertRuleModel"
          },
          "title": "Rules",
          "type": "array"
        }
      },
      "required": [
        "name",
        "rules"
      ],
      "title": "AlertGroupModel",
      "type": "object"
    },
    "AlertRuleModel": {
      "properties": {
        "alert": {
          "description": "The name of the alert rule.",
          "title": "Alert",
          "type": "string"
        },
        "expr": {
          "description": "The expression for the alert rule.",
          "title": "Expr",
          "type": "string"
        },
        "for": {
          "description": "The duration for which the conditions must be true for the alert to be firing.",
          "title": "For",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels associated with the alert rule.",
          "title": "Labels",
          "type": "object"
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations associated with the alert rule.",
          "title": "Annotations",
          "type": "object"
        }
      },
      "required": [
        "alert",
        "expr",
        "for",
        "labels",
        "annotations"
      ],
      "title": "AlertRuleModel",
      "type": "object"
    },
    "AlertRulesModel": {
      "properties": {
        "groups": {
          "description": "List of alert rule groups.",
          "items": {
            "$ref": "#/$defs/AlertGroupModel"
          },
          "title": "Groups",
          "type": "array"
        }
      },
      "required": [
        "groups"
      ],
      "title": "AlertRulesModel",
      "type": "object"
    },
    "ApplicationDataModel": {
      "properties": {
        "alert_rules": {
          "contentMediaType": "application/json",
          "contentSchema": {
            "$ref": "#/$defs/AlertRulesModel"
          },
          "description": "Alert rules provided by the charm. By default, loaded from `<charm_parent_dir>/prometheus_alert_rules`.",
          "title": "Alert Rules",
          "type": "string"
        },
        "scrape_jobs": {
          "contentMediaType": "application/json",
          "contentSchema": {
            "items": {
              "$ref": "#/$defs/ScrapeJobModel"
            },
            "type": "array"
          },
          "description": "List of Prometheus scrape job configurations specifying metrics scraping targets.",
          "title": "Scrape Jobs",
          "type": "string"
        },
        "scrape_metadata": {
          "contentMediaType": "application/json",
          "contentSchema": {
            "$ref": "#/$defs/ScrapeMetadataModel"
          },
          "description": "Metadata providing information about the Juju topology.",
          "title": "Scrape Metadata",
          "type": "string"
        }
      },
      "required": [
        "alert_rules",
        "scrape_jobs",
        "scrape_metadata"
      ],
      "title": "ApplicationDataModel",
      "type": "object"
    },
    "ScrapeJobModel": {
      "additionalProperties": true,
      "properties": {
        "job_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Name of the Prometheus scrape job, each job must be given a unique name &  should be a fixed string (e.g. hardcoded literal)",
          "title": "Job Name"
        },
        "metrics_path": {
          "description": "Path for metrics scraping.",
          "title": "Metrics Path",
          "type": "string"
        },
        "static_configs": {
          "description": "List of static configurations for scrape targets.",
          "items": {
            "$ref": "#/$defs/ScrapeStaticConfigModel"
          },
          "title": "Static Configs",
          "type": "array"
        }
      },
      "required": [
        "metrics_path",
        "static_configs"
      ],
      "title": "ScrapeJobModel",
      "type": "object"
    },
    "ScrapeMetadataModel": {
      "additionalProperties": true,
      "properties": {
        "model": {
          "description": "Juju model name.",
          "title": "Model",
          "type": "string"
        },
        "model_uuid": {
          "description": "Juju model UUID.",
          "title": "Model Uuid",
          "type": "string"
        },
        "application": {
          "description": "Juju application name.",
          "title": "Application",
          "type": "string"
        },
        "unit": {
          "description": "Juju unit name.",
          "title": "Unit",
          "type": "string"
        }
      },
      "required": [
        "model",
        "model_uuid",
        "application",
        "unit"
      ],
      "title": "ScrapeMetadataModel",
      "type": "object"
    },
    "ScrapeStaticConfigModel": {
      "additionalProperties": true,
      "properties": {
        "targets": {
          "description": "List of scrape targets. Accepts wildcard (\"*\")",
          "items": {
            "type": "string"
          },
          "title": "Targets",
          "type": "array"
        },
        "labels": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional labels for the scrape targets",
          "title": "Labels"
        }
      },
      "required": [
        "targets"
      ],
      "title": "ScrapeStaticConfigModel",
      "type": "object"
    },
    "UnitDataModel": {
      "additionalProperties": true,
      "properties": {
        "prometheus_scrape_unit_address": {
          "description": "The address provided by the unit for Prometheus scraping. This address is where Prometheus can retrieve metrics data from the unit.",
          "title": "Prometheus Scrape Unit Address",
          "type": "string"
        },
        "prometheus_scrape_unit_name": {
          "description": "The name provided by the unit for Prometheus scraping. This name uniquely identifies the unit as a target for Prometheus to collect metrics data.",
          "title": "Prometheus Scrape Unit Name",
          "type": "string"
        },
        "prometheus_scrape_unit_path": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "An optional path provided by the unit for Prometheus scraping. It is present when the provider charm is backed by an Ingress or a Proxy.",
          "title": "Prometheus Scrape Unit Path"
        }
      },
      "required": [
        "prometheus_scrape_unit_address",
        "prometheus_scrape_unit_name",
        "prometheus_scrape_unit_path"
      ],
      "title": "UnitDataModel",
      "type": "object"
    }
  },
  "description": "Provider schema for Prometheus Scrape.",
  "properties": {
    "unit": {
      "$ref": "#/$defs/UnitDataModel"
    },
    "app": {
      "$ref": "#/$defs/ApplicationDataModel"
    }
  },
  "required": [
    "unit",
    "app"
  ],
  "title": "ProviderSchema",
  "type": "object"
}